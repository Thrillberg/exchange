---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: exchange-web
  namespace: default
spec:
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: exchange
        component: web
        layer: application
      name: exchange-web
    spec:
      containers:
      - name: exchange-web
        env:
        - name: RAILS_SERVE_STATIC_FILES
          value: 'true'
        - name: RAILS_LOG_TO_STDOUT
          value: 'true'
        - name: RAILS_ENV
          value: production
        envFrom:
        - configMapRef:
            name: exchange-environment
        image: 585031190124.dkr.ecr.us-east-1.amazonaws.com/exchange:staging
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: exchange-sidekiq
spec:
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: exchange
        layer: application
        component: sidekiq
      name: exchange-sidekiq
      namespace: default
    spec:
      containers:
        - name: exchange-sidekiq
          envFrom:
          - configMapRef:
              name: exchange-environment
          image: 585031190124.dkr.ecr.us-east-1.amazonaws.com/exchange:staging
          imagePullPolicy: Always
          command: ["bundle", "exec", "sidekiq"]
          livenessProbe:
            exec:
              command:
              - pgrep
              - -f
              - sidekiq
            initialDelaySeconds: 5
            periodSeconds: 5
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            preference:
              matchExpressions:
              - key: tier
                operator: In
                values:
                - background
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: exchange
    component: web
    layer: application
  name: exchange-web
  namespace: default
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-ssl-cert: "arn:aws:iam::585031190124:server-certificate/2018-01-17_artsy-net-wildcard"
    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: "http"
    service.beta.kubernetes.io/aws-load-balancer-ssl-ports: "443"
    service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: "true"
    service.beta.kubernetes.io/aws-load-balancer-connection-draining-enabled: "true"
    service.beta.kubernetes.io/aws-load-balancer-connection-idle-timeout: "300"
spec:
  ports:
  - port: 443
    protocol: TCP
    name: https
    targetPort: 8080
  - port: 80
    protocol: TCP
    name: http
    targetPort: 8080
  selector:
    app: exchange
    component: web
    layer: application
  type: LoadBalancer
